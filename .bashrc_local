___dotfiles_dir=$(dirname $(realpath ${BASH_SOURCE}))

export LIBVIRT_DEFAULT_URI=qemu:///system
export EDITOR=vim

# GPG settings
export GPG_AGENT_INFO

git_debug_enable() {
    export GIT_TRACE=1
    export GIT_TRACE_PACKET=1
    export GIT_CURL_TRACE=1
}

git_debug_disable() {
    export GIT_TRACE=false
    export GIT_TRACE_PACKET=false
    export GIT_CURL_TRACE=false
}

# GO settings
export GOROOT=/usr/local/go
export GOPATH=${HOME}/Projekty/go
export PATH="${GOPATH}/bin:/usr/local/go/bin:${PATH}"


export LS_OPTIONS='--color=auto'
if [[ -x /usr/bin/dircolors ]]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi


alias ls='ls $LS_OPTIONS'
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

alias grep='grep $LS_OPTIONS'
alias fgrep='fgrep $LS_OPTIONS'
alias egrep='egrep $LS_OPTIONS'


alias dockerclearcontainers="docker container prune"
alias dockerclearimages="docker image prune"
alias dockerclearvolumes="docker volume prune"
alias dockerclear="dockerclearcontainers && dockerclearimages && dockerclearvolumes"
alias dockerps='docker ps --format "{{.ID}}  {{.Status | printf \"%-20s\" }} {{.Names | printf \"%-40s\" }} {{.Ports}}"'

alias brspec='bundle exec rspec --format documentation'
alias brake='bundle exec rake'


if [[ -f /etc/bash_completion ]]; then
    source /etc/bash_completion
elif [[ -f /etc/bash_completion.d/git-prompt ]]; then
    source /etc/bash_completion.d/git-prompt
fi


if [[ -d ${HOME}/.rbenv/bin ]]; then
    export PATH="${HOME}/.rbenv/bin:${PATH}"
    eval "$(rbenv init -)"
fi


if [[ -f ~/Projekty/gitlab/gitlab-compose-kit/.gck ]]; then
    export USE_RAILS_SERVER="yes"
    source ~/Projekty/gitlab/gitlab-compose-kit/.gck
fi

if [[ -d /opt/jetbrains/idea/current/bin ]]; then
    export PATH="/opt/jetbrains/idea/current/bin:${PATH}"
fi
if [[ -d /opt/jetbrains/rubymine/current/bin ]]; then
    export PATH="/opt/jetbrains/rubymine/current/bin:${PATH}"
fi


if [[ -d ~/.bashrc_local.d ]]; then
    for file in ~/.bashrc_local.d/*; do
        source ${file}
    done
fi

if (doctl completion bash >/dev/null 2>&1); then
    source <(doctl completion bash)
fi

if (helm completion bash >/dev/null 2>&1); then
    source <(helm completion bash)
fi

if (minikube completion bash >/dev/null 2>&1); then
    source <(minikube completion bash)
fi

if (kubectl completion bash >/dev/null 2>&1); then
    source <(kubectl completion bash)
fi

